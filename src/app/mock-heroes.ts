import { Course } from './hero';

export const COURSES: Course[] = [{"id":1,"name":"Operating System","credits":"4","description":"This course will introduce the core concepts of operating systems, such as processes and threads, scheduling, synchronization, memory management, file systems, input and output device management and security. The course will consist of assigned reading, weekly lectures, a midterm and final exam, and a sequence of programming assignments. The goal of the readings and lectures is to introduce the core concepts. The goal of the programming assignments is to give students some exposure to operating system code. Students are expected to read the assigned materials prior to each class, and to participate in in-class discussions.","image":"assets/linux.jpeg","documents":["Introduction.pdf","Syllabus.pdf"],"videos":["https://www.youtube.com/watch?v=2i2N_Qo_FyM","https://www.youtube.com/watch?v=QTQ8zym8Au0"]},{"id":2,"name":"Web Technologies","credits":"4","description":"The focus in this course is on the World Wide Web as a platform for interactive applications, content publishing and social services. The development of web-based applications requires knowledge about the underlying technology and the formats and standards the web is based upon. In this course you will learn about the HTTP communication protocol, the markup languages HTML, XHTML and XML, the CSS and XSLT standards for formatting and transforming web content, interactive graphics and multimedia content on the web, client-side programming using Javascript.","image":"assets/webt.jpeg","documents":["Introduction.pdf","Syllabus.pdf"],"videos":[]},{"id":3,"name":"Object Oriented Design","credits":"4","description":"Introduction to OOAD training begins by exploring advanced Object-Oriented (OO) concepts, like multiple inheritance, polymorphism, inner classes, etc. by building on the core OO concepts. The course then transitions from concept theory into object oriented design practices. The course concludes by examining design strategies such as noun-verb decomposition, user stories, use cases, Class-Responsibility-Collaboration (CRC) Cards, 4+1 architectural view, etc","image":"assets/oomd.jpg","documents":["Introduction.pdf","Syllabus.pdf"],"videos":["https://www.youtube.com/watch?v=2i2N_Qo_FyM","https://www.youtube.com/watch?v=QTQ8zym8Au0"]},{"id":4,"name":"Algoruthms and Data Structures","credits":"4","description":"Introduction to OOAD training begins by exploring advanced Object-Oriented (OO) concepts, like multiple inheritance, polymorphism, inner classes, etc. by building on the core OO concepts. The course then transitions from concept theory into object oriented design practices. The course concludes by examining design strategies such as noun-verb decomposition, user stories, use cases, Class-Responsibility-Collaboration (CRC) Cards, 4+1 architectural view, etc","image":"assets/oomd.jpg","documents":["Introduction.pdf","Syllabus.pdf"],"videos":["https://www.youtube.com/watch?v=2i2N_Qo_FyM","https://www.youtube.com/watch?v=QTQ8zym8Au0"]}];